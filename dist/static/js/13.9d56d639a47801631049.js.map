{"version":3,"sources":["webpack:///src/components/InterfaceTestTemplate/TaskTemplate/TaskTable.vue","webpack:///./src/components/InterfaceTestTemplate/TaskTemplate/TaskTable.vue?02c8","webpack:///./src/components/InterfaceTestTemplate/TaskTemplate/TaskTable.vue","webpack:///src/components/rootPageTemplate/Task.vue","webpack:///./src/components/rootPageTemplate/Task.vue?5f18","webpack:///./src/components/rootPageTemplate/Task.vue"],"names":["TaskTable","_this","this","sceneIds","format","GLOBAL","MONITOR_URL","axios","post","url","stringify_default","conditions","then","response","scene_list","catch","_this2","editTaskDetail","sceneList","_this3","get","projectList","executeFunc","businessList","sceneTypeList","_ref","row","_this4","jobId","editUrl","job_info","_this5","isEmpty","join","id","job_name","job_method","job_des","job_schedule","job_type","jobEntity","code","_this6","toString","_this7","_this8","_this9","TaskTemplate_TaskTable","render","_vm","_h","$createElement","_c","_self","directives","name","rawName","value","expression","staticStyle","width","margin-top","attrs","element-loading-text","element-loading-spinner","element-loading-background","data","tabData","border","size","row-class-name","tableRowClassName","_l","col","index","prop","key","label","align","scopedSlots","_u","fn","scope","_v","_s","args","split","length","slice","type","on","click","$event","idsClick","fixed","show-overflow-tooltip","margin-left","status","executeJob","$index","pauseJob","_e","resumeTask","getJobDetail","removeTask","title","visible","editDialogVisible","update:visible","staticClass","gutter","span","color","pull","placeholder","clearable","required","disabled","model","callback","$$v","$set","rows","change","getConditionsForEdit","item","focus","checkParentForEdit","changeBusinessId","changeSceneType","multiple","collapse-tags","filterable","scene_name","slot","editTask","tabDialog","sceneNameList","max-height","property","icon","circle","staticRenderFns","Task","__webpack_require__","normalizeComponent","ssrContext","getConditionsForAdd","search","taskDetail","statusList","msg","getTaskList","getConditions","taskId","taskName","taskStatus","currentPage","total","pageSize","jobInfo","tableHeader","tableData","rootPageTemplate_Task","round","openAddDialog","reset","tabHeader","dialogVisible","close","clearData","checkParentForAdd","addTask","current-page","page-size","layout","current-change","update:currentPage","update:current-page","Task_Component","Task_normalizeComponent","__webpack_exports__"],"mappings":"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","file":"static/js/13.9d56d639a47801631049.js","sourcesContent":["<template>\n  <div>\n    <el-table\n      v-loading=\"loading\"\n      element-loading-text=\"拼命执行中,请稍等~~~\"\n      element-loading-spinner=\"el-icon-loading\"\n      element-loading-background=\"rgba(0, 0, 0, 0.8)\"\n      :data=\"tabData\"\n      style=\"width: 100%;margin-top: -10px\"\n      border\n      size=\"mini\"\n      :row-class-name=\"tableRowClassName\"\n    >\n      <!--使用默认的唯一索引index,作为key的唯一值-->\n      <template v-for=\"(col, index) in tabHeader\">\n        <!--key是必须的且写在真实的html元素上,否则es6检查会报错-->\n        <el-table-column\n          v-if=\"col.prop === 'args'\"\n          :prop=\"col.prop\"\n          :label=\"col.label\"\n          :key=\"index\"\n          width=\"250px\"\n          align=\"center\"\n        >\n          <template slot-scope=\"scope\">\n            <span\n              >{{\n                scope.row.args.split(',').length > 5\n                  ? scope.row.args.slice(0, 12) + '...'\n                  : scope.row.args\n              }}<el-button\n                type=\"text\"\n                size=\"mini\"\n                @click=\"idsClick(scope.row.args)\"\n                >查 看</el-button\n              ></span\n            >\n          </template>\n        </el-table-column>\n        <el-table-column\n          v-else-if=\"col.prop === 'id'\"\n          :prop=\"col.prop\"\n          :label=\"col.label\"\n          :key=\"index\"\n          width=\"250px\"\n          align=\"center\"\n          fixed=\"left\"\n        >\n        </el-table-column>\n        <el-table-column\n          v-else-if=\"col.prop === 'status'\"\n          :label=\"col.label\"\n          :key=\"index\"\n          align=\"center\"\n          show-overflow-tooltip\n          width=\"100\"\n        >\n          <template slot-scope=\"scope\">\n            <span style=\"margin-left: 10px\">{{\n              scope.row.status === 1 ? '运行中' : '已停用'\n            }}</span>\n          </template>\n        </el-table-column>\n        <!--操作选项-->\n        <el-table-column\n          v-else-if=\"col.type === 'action' && col.prop === 'action'\"\n          :label=\"col.label\"\n          :key=\"index\"\n          align=\"center\"\n          show-overflow-tooltip\n          width=\"200px\"\n          fixed=\"right\"\n        >\n          <template slot-scope=\"scope\">\n            <el-button\n              type=\"text\"\n              size=\"mini\"\n              @click=\"executeJob(tabData[scope.$index].args)\"\n              >执行\n            </el-button>\n            <el-button\n              v-if=\"tabData[scope.$index].status === 1\"\n              type=\"text\"\n              size=\"mini\"\n              @click=\"pauseJob(tabData[scope.$index].id)\"\n              >停用\n            </el-button>\n            <el-button\n              v-if=\"tabData[scope.$index].status === 0\"\n              type=\"text\"\n              size=\"mini\"\n              @click=\"resumeTask(tabData[scope.$index].id)\"\n              >启用\n            </el-button>\n            <el-button\n              type=\"text\"\n              size=\"mini\"\n              @click=\"getJobDetail(tabData[scope.$index].id)\"\n              >编辑\n            </el-button>\n            <el-button\n              type=\"text\"\n              size=\"mini\"\n              @click=\"removeTask(tabData[scope.$index].id)\"\n              >删除\n            </el-button>\n          </template>\n        </el-table-column>\n        <el-table-column\n          v-else\n          :prop=\"col.prop\"\n          :label=\"col.label\"\n          :key=\"index\"\n          align=\"center\"\n          show-overflow-tooltip\n          width=\"250px\"\n        >\n        </el-table-column>\n      </template>\n    </el-table>\n    <el-dialog title=\"编辑\" :visible.sync=\"editDialogVisible\" width=\"80%\">\n      <div>\n        <el-card class=\"box-card\">\n          <el-row :gutter=\"20\">\n            <el-col :span=\"4\">\n              <span>任务名称: <span style=\"color:red\">*</span></span>\n            </el-col>\n            <el-col :span=\"8\" :pull=\"2\">\n              <el-input\n                style=\"width: 400px\"\n                placeholder=\"必填项:请输入内容\"\n                v-model=\"editTaskDetail['id']\"\n                clearable\n                required=\"true\"\n                disabled\n              >\n              </el-input>\n            </el-col>\n            <el-col :span=\"4\">\n              <span>任务描述: <span style=\"color:red\">*</span></span>\n            </el-col>\n            <el-col :span=\"8\" :pull=\"2\">\n              <el-input\n                style=\"width: 400px\"\n                placeholder=\"必填项:请输入内容\"\n                v-model=\"editTaskDetail['job_name']\"\n                clearable\n                required=\"true\"\n                type=\"textarea\"\n                :rows=\"3\"\n              >\n              </el-input>\n            </el-col>\n          </el-row>\n          <el-row :gutter=\"20\">\n            <el-col :span=\"4\">\n              <span>所属项目: </span>\n            </el-col>\n            <el-col :span=\"8\" :pull=\"2\">\n              <el-select\n                placeholder=\"必填项:请选择\"\n                v-model=\"editTaskDetail['project_id']\"\n                clearable\n                required=\"true\"\n                @change=\"getConditionsForEdit\"\n                class=\"taskDetail\"\n                style=\"width: 400px\"\n              >\n                <el-option\n                  v-for=\"item in editProjectList\"\n                  :key=\"item.label\"\n                  :label=\"item.label\"\n                  :value=\"item.value\"\n                >\n                </el-option>\n              </el-select>\n            </el-col>\n            <el-col :span=\"4\">\n              <span>所属业务: </span>\n            </el-col>\n            <el-col :span=\"8\" :pull=\"2\">\n              <el-select\n                style=\"width: 400px\"\n                placeholder=\"必填项:请选择\"\n                v-model=\"editTaskDetail['business_id']\"\n                clearable\n                required=\"true\"\n                class=\"taskDetail\"\n                @focus=\"checkParentForEdit('business')\"\n                @change=\"changeBusinessId\"\n              >\n                <el-option\n                  v-for=\"item in editBusinessList\"\n                  :key=\"item.label\"\n                  :label=\"item.label\"\n                  :value=\"item.value\"\n                >\n                </el-option>\n              </el-select>\n            </el-col>\n          </el-row>\n          <el-row :gutter=\"20\">\n            <el-col :span=\"4\">\n              <span>场景类型: </span>\n            </el-col>\n            <el-col :span=\"8\" :pull=\"2\">\n              <el-select\n                style=\"width: 400px\"\n                placeholder=\"必填项:请选择\"\n                v-model=\"editTaskDetail['scene_type']\"\n                clearable\n                required=\"true\"\n                @change=\"changeSceneType\"\n                class=\"taskDetail\"\n                @focus=\"checkParentForEdit('scene_type')\"\n              >\n                <el-option\n                  v-for=\"item in editSceneTypeList\"\n                  :key=\"item.label\"\n                  :label=\"item.label\"\n                  :value=\"item.value\"\n                >\n                </el-option>\n              </el-select>\n            </el-col>\n            <el-col :span=\"4\">\n              <span>场景集:<span style=\"color:red\">*</span></span>\n            </el-col>\n            <el-col :span=\"8\" :pull=\"2\">\n              <el-select\n                style=\"width: 400px\"\n                placeholder=\"必填项:请选择\"\n                v-model=\"editTaskDetail['scene_list']\"\n                multiple\n                collapse-tags\n                clearable\n                required=\"true\"\n                filterable\n                class=\"taskDetail\"\n                @focus=\"checkParentForEdit('scene')\"\n              >\n                <el-option\n                  v-for=\"item in editSceneList\"\n                  :key=\"item.id\"\n                  :label=\"'【' + item.id + '】' + item.scene_name\"\n                  :value=\"item.id\"\n                >\n                </el-option>\n              </el-select>\n            </el-col>\n          </el-row>\n          <el-row :gutter=\"20\">\n            <el-col :span=\"4\">\n              <span>执行计划:<span style=\"color:red\">*</span></span>\n            </el-col>\n            <el-col :span=\"8\" :pull=\"2\">\n              <el-input\n                style=\"width: 400px\"\n                placeholder=\"必填项:cron表达式；【例:*/1 * * * *】\"\n                v-model=\"editTaskDetail['job_schedule']\"\n                clearable\n                required=\"true\"\n              >\n              </el-input>\n            </el-col>\n            <el-col :span=\"4\">\n              <span>调用方法: <span style=\"color:red\">*</span></span>\n            </el-col>\n            <el-col :span=\"8\" :pull=\"2\">\n              <el-select\n                style=\"width: 400px\"\n                placeholder=\"必填项:请选择\"\n                v-model=\"editTaskDetail['job_method']\"\n                clearable\n                required=\"true\"\n                filterable\n                class=\"taskDetail\"\n              >\n                <el-option\n                  v-for=\"item in editExecuteFunc\"\n                  :key=\"item.label\"\n                  :label=\"item.label\"\n                  :value=\"item.value\"\n                >\n                </el-option>\n              </el-select>\n            </el-col>\n          </el-row>\n        </el-card>\n      </div>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"editTask\">保 存</el-button>\n      </span>\n    </el-dialog>\n    <el-dialog title=\"场景列表\" :visible.sync=\"tabDialog\">\n      <el-table\n        :data=\"sceneNameList\"\n        border\n        size=\"mini\"\n        max-height=\"350px\"\n        :row-class-name=\"tableRowClassName\"\n      >\n        <el-table-column\n          property=\"id\"\n          label=\"场景id\"\n          width=\"100px\"\n          align=\"center\"\n        ></el-table-column>\n        <el-table-column\n          property=\"name\"\n          align=\"center\"\n          label=\"场景名称\"\n        ></el-table-column>\n        <el-table-column\n          property=\"status\"\n          label=\"状态\"\n          width=\"100px\"\n          align=\"center\"\n        >\n          <template slot-scope=\"scope\">\n            <el-button\n              v-if=\"scope.row.status === 0\"\n              type=\"danger\"\n              disabled\n              icon=\"el-icon-close\"\n              circle\n              size=\"mini\"\n            />\n            <el-button\n              v-else-if=\"scope.row.status === 1\"\n              type=\"success\"\n              icon=\"el-icon-check\"\n              circle\n              disabled\n              size=\"mini\"\n            />\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  // 模板名称\n  name: 'TaskTab',\n  // 模板动态参数(tabData:表格的列数据;tabHeader:表头;tabHeight:表格的固定高度,值由引用组件传入)\n  props: {\n    tabData: null,\n    tabHeader: null,\n    tabHeight: null\n  },\n  data() {\n    return {\n      tabDialog: false,\n      sceneNameList: [],\n      editTaskDetail: {\n        id: '',\n        job_name: '',\n        project_id: '',\n        business_id: '',\n        scene_type: '',\n        scene_list: '',\n        job_schedule: '',\n        job_method: ''\n      },\n      editDialogVisible: false,\n      editProjectList: [],\n      editBusinessList: [],\n      editExecuteFunc: [],\n      editSceneTypeList: [],\n      editSceneList: [],\n      loading: false\n    };\n  },\n  methods: {\n    // 根据场景id集查询场景名称\n    idsClick(sceneIds) {\n      this.tabDialog = true;\n      let conditions = { ids: sceneIds };\n      let url = String.format(\n        '{0}/jobInterface/sceneNameList',\n        this.GLOBAL.MONITOR_URL\n      );\n      // 指定参数格式\n      let config = {\n        headers: {\n          'Content-Type': 'application/json;charset=UTF-8'\n        }\n      };\n      this.axios\n        .post(url, JSON.stringify(conditions), config)\n        .then(response => {\n          this.sceneNameList = response.data.data.scene_list;\n          return response;\n        })\n        .catch(response => {\n          return response;\n        });\n    },\n    // 所属业务改变\n    changeBusinessId() {\n      this.editTaskDetail['scene_list'] = [];\n      this.editTaskDetail['scene_type'] = '';\n      this.editSceneList = [];\n    },\n    // 场景类型改变\n    changeSceneType() {\n      this.editTaskDetail['scene_list'] = [];\n      if (\n        this.editTaskDetail['project_id'] !== '' &&\n        this.editTaskDetail['business_id'] !== '' &&\n        this.editTaskDetail['scene_type'] !== ''\n      ) {\n        // 指定参数格式\n        let config = {\n          headers: {\n            'Content-Type': 'application/json;charset=UTF-8'\n          }\n        };\n        //  let url = String.format('{0}/jobInterface/addTask', 'http://127.0.0.1:5000')\n        let url = String.format(\n          '{0}/jobInterface/querySceneByConditions',\n          this.GLOBAL.MONITOR_URL\n        );\n        let conditions = {\n          project_id: this.editTaskDetail['project_id'],\n          business_id: this.editTaskDetail['business_id'],\n          scene_type: this.editTaskDetail['scene_type']\n        };\n        this.axios\n          .post(url, JSON.stringify(conditions), config)\n          .then(response => {\n            this.editSceneList = response.data.sceneList;\n          })\n          .catch(response => {\n            return response;\n          });\n      }\n    },\n    // 检查所属项目是否选中\n    checkParentForEdit(item) {\n      if (item === 'scene') {\n        if (\n          this.editTaskDetail['project_id'] === '' ||\n          this.editTaskDetail['business_id'] === '' ||\n          this.editTaskDetail['scene_type'] === ''\n        ) {\n          this.$message({\n            type: 'error',\n            message: '请先选择所属项目、所属业务、场景类型!'\n          });\n        }\n      } else if (item === 'business') {\n        if (this.editTaskDetail['project_id'] === '') {\n          this.$message({\n            type: 'error',\n            message: '请先选择所属项目!'\n          });\n        }\n      }\n      // else if (item === 'scene_type') {\n      //   if (\n      //     this.editTaskDetail['project_id'] === '' ||\n      //     this.editTaskDetail['business_id'] === ''\n      //   ) {\n      //     this.$message({\n      //       type: 'error',\n      //       message: '请先选择所属项目、所属业务!'\n      //     });\n      //   }\n      // }\n    },\n    // 获取编辑页面查询条件\n    getConditionsForEdit() {\n      this.editTaskDetail['business_id'] = '';\n      this.editTaskDetail['scene_list'] = [];\n      this.editTaskDetail['scene_type'] = '';\n      this.editSceneTypeList = [];\n      this.editSceneList = [];\n      // 获取查询条件\n      // let url = String.format('{0}/jobInterface/taskConditions', 'http://127.0.0.1:5000')\n      let url = String.format(\n        '{0}/jobInterface/taskConditions?project_id={1}',\n        this.GLOBAL.MONITOR_URL,\n        this.editTaskDetail['project_id']\n      );\n      this.axios\n        .get(url)\n        .then(response => {\n          this.editProjectList = response.data.data.projectList;\n          this.editExecuteFunc = response.data.data.executeFunc;\n          this.editBusinessList = response.data.data.businessList;\n          this.editSceneTypeList = response.data.data.sceneTypeList;\n          return response;\n        })\n        .catch(response => {\n          return response;\n        });\n    },\n    // 设置行的颜色\n    tableRowClassName({ row, rowIndex }) {\n      if (rowIndex % 2 === 0) {\n        return 'warning-row';\n      } else {\n        return 'success-row';\n      }\n    },\n    // 根据jobId获取job详情\n    getJobDetail(jobId) {\n      this.editDialogVisible = true;\n      // let editUrl = String.format('{0}/jobInterface/taskInfo?id={1}', 'http://127.0.0.1:5000', jobId)\n      let editUrl = String.format(\n        '{0}/jobInterface/taskInfo?id={1}',\n        this.GLOBAL.MONITOR_URL,\n        jobId\n      );\n      this.axios\n        .get(editUrl)\n        .then(response => {\n          this.editSceneList = response.data.conditions.sceneList;\n          this.editProjectList = response.data.conditions.projectList;\n          this.editBusinessList = response.data.conditions.businessList;\n          this.editSceneTypeList = response.data.conditions.sceneTypeList;\n          this.editExecuteFunc = response.data.conditions.executeFunc;\n          this.editTaskDetail = response.data.job_info;\n          return response;\n        })\n        .catch(response => {\n          return response;\n        });\n    },\n    // 编辑保存job\n    editTask() {\n      if (\n        this.isEmpty(this.editTaskDetail['id']) ||\n        this.isEmpty(this.editTaskDetail['job_name']) ||\n        this.isEmpty(this.editTaskDetail['job_method']) ||\n        this.isEmpty(this.editTaskDetail['job_schedule']) ||\n        this.isEmpty(this.editTaskDetail['scene_list'].join(','))\n      ) {\n        this.Message.error('警告:请填写必填项！');\n      } else {\n        let jobEntity = {\n          id: this.editTaskDetail.id,\n          job_name: this.editTaskDetail.job_name,\n          job_method: this.editTaskDetail.job_method,\n          job_des: this.editTaskDetail.job_des,\n          job_schedule: this.editTaskDetail.job_schedule,\n          job_type: this.editTaskDetail.job_type,\n          param: this.editTaskDetail.scene_list.join(',')\n        };\n        // 指定参数格式\n        let config = {\n          headers: {\n            'Content-Type': 'application/json;charset=UTF-8'\n          }\n        };\n        // let url = String.format('{0}/jobInterface/updateTask', 'http://127.0.0.1:5000')\n        let url = String.format(\n          '{0}/jobInterface/updateTask',\n          this.GLOBAL.MONITOR_URL\n        );\n        this.axios\n          .post(url, JSON.stringify(jobEntity), config)\n          .then(response => {\n            let responseCode = response.data.code;\n            if (responseCode === '200') {\n              this.$emit('search');\n              this.Message.success('修改成功！');\n              this.editDialogVisible = false;\n            } else {\n              this.Message.error('修改失败！');\n              this.editDialogVisible = false;\n              // 刷新页面\n              this.$emit('search');\n            }\n            return response;\n          })\n          .catch(response => {\n            return response;\n          });\n      }\n    },\n    // 删除job\n    removeTask(jobId) {\n      this.$confirm('此操作将永久删除该任务, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n        .then(() => {\n          // 指定参数格式\n          let config = {\n            headers: {\n              'Content-Type': 'application/json;charset=UTF-8'\n            }\n          };\n          // let url = String.format('{0}/jobInterface/removeTask', 'http://127.0.0.1:5000')\n          let url = String.format(\n            '{0}/jobInterface/removeTask',\n            this.GLOBAL.MONITOR_URL\n          );\n          let conditions = {\n            id: jobId.toString()\n          };\n          this.axios\n            .post(url, JSON.stringify(conditions), config)\n            .then(response => {\n              let code = response.data.code;\n              if (code === '200') {\n                this.Message.success('删除成功！');\n                this.$emit('search');\n              } else {\n                this.Message.error('删除失败！');\n                this.$emit('search');\n              }\n              return response;\n            })\n            .catch(response => {\n              return response;\n            });\n        })\n        .catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n    },\n    // 手动执行任务\n    executeJob(param) {\n      this.loading = true;\n      // 指定参数格式\n      let config = {\n        headers: {\n          'Content-Type': 'application/json;charset=UTF-8'\n        }\n      };\n      // let url = String.format('{0}/jobInterface/executeTask', 'http://127.0.0.1:5000')\n      let url = String.format(\n        '{0}/jobInterface/executeTask',\n        this.GLOBAL.MONITOR_URL\n      );\n      let conditions = {\n        param: param.toString()\n      };\n      this.axios\n        .post(url, JSON.stringify(conditions), config)\n        .then(response => {\n          let code = response.data.code;\n          this.loading = false;\n          if (code === '200') {\n            this.$emit('search');\n\n            this.Message.success('执行成功！');\n          } else {\n            this.$emit('search');\n\n            this.Message.error('执行失败！');\n          }\n          return response;\n        })\n        .catch(response => {\n          return response;\n        });\n    },\n    // 恢复job\n    resumeTask(jobId) {\n      // 指定参数格式\n      let config = {\n        headers: {\n          'Content-Type': 'application/json;charset=UTF-8'\n        }\n      };\n      //  let url = String.format('{0}/jobInterface/resumeTask', 'http://127.0.0.1:5000')\n      let url = String.format(\n        '{0}/jobInterface/resumeTask',\n        this.GLOBAL.MONITOR_URL\n      );\n      let conditions = {\n        id: jobId.toString()\n      };\n      this.axios\n        .post(url, JSON.stringify(conditions), config)\n        .then(response => {\n          let code = response.data.code;\n          if (code === '200') {\n            this.Message.success('启用成功！');\n            this.$emit('search');\n          } else {\n            this.Message.error('启用失败！');\n            this.$emit('search');\n          }\n          return response;\n        })\n        .catch(response => {\n          return response;\n        });\n    },\n    // 暂停job\n    pauseJob(jobId) {\n      // 指定参数格式\n      let config = {\n        headers: {\n          'Content-Type': 'application/json;charset=UTF-8'\n        }\n      };\n      // let url = String.format('{0}/jobInterface/pauseTask', 'http://127.0.0.1:5000')\n      let url = String.format(\n        '{0}/jobInterface/pauseTask',\n        this.GLOBAL.MONITOR_URL\n      );\n      let conditions = {\n        id: jobId.toString()\n      };\n      this.axios\n        .post(url, JSON.stringify(conditions), config)\n        .then(response => {\n          let code = response.data.code;\n          if (code === '200') {\n            this.Message.success('暂停成功！');\n            this.$emit('search');\n          } else {\n            this.Message.error('暂停失败！');\n            this.$emit('search');\n          }\n          return response;\n        })\n        .catch(response => {\n          return response;\n        });\n    },\n    // 校验输入、选项框是否为空\n    isEmpty(obj) {\n      if (obj === undefined || obj === '') {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }\n};\n</script>\n<style scoped>\n.el-table >>> .warning-row {\n  background: oldlace;\n}\n\n.el-table >>> .success-row {\n  background: #f0f9eb;\n}\n\n.el-row {\n  line-height: 60px;\n  margin-top: 10px;\n}\n\n.editTaskDetail >>> .el-input__inner {\n  height: 40px !important;\n  width: 400px !important;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/InterfaceTestTemplate/TaskTemplate/TaskTable.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticStyle:{\"width\":\"100%\",\"margin-top\":\"-10px\"},attrs:{\"element-loading-text\":\"拼命执行中,请稍等~~~\",\"element-loading-spinner\":\"el-icon-loading\",\"element-loading-background\":\"rgba(0, 0, 0, 0.8)\",\"data\":_vm.tabData,\"border\":\"\",\"size\":\"mini\",\"row-class-name\":_vm.tableRowClassName}},[_vm._l((_vm.tabHeader),function(col,index){return [(col.prop === 'args')?_c('el-table-column',{key:index,attrs:{\"prop\":col.prop,\"label\":col.label,\"width\":\"250px\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',[_vm._v(_vm._s(scope.row.args.split(',').length > 5\n                ? scope.row.args.slice(0, 12) + '...'\n                : scope.row.args)),_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.idsClick(scope.row.args)}}},[_vm._v(\"查 看\")])],1)]}}],null,true)}):(col.prop === 'id')?_c('el-table-column',{key:index,attrs:{\"prop\":col.prop,\"label\":col.label,\"width\":\"250px\",\"align\":\"center\",\"fixed\":\"left\"}}):(col.prop === 'status')?_c('el-table-column',{key:index,attrs:{\"label\":col.label,\"align\":\"center\",\"show-overflow-tooltip\":\"\",\"width\":\"100\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{staticStyle:{\"margin-left\":\"10px\"}},[_vm._v(_vm._s(scope.row.status === 1 ? '运行中' : '已停用'))])]}}],null,true)}):(col.type === 'action' && col.prop === 'action')?_c('el-table-column',{key:index,attrs:{\"label\":col.label,\"align\":\"center\",\"show-overflow-tooltip\":\"\",\"width\":\"200px\",\"fixed\":\"right\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.executeJob(_vm.tabData[scope.$index].args)}}},[_vm._v(\"执行\\n          \")]),_vm._v(\" \"),(_vm.tabData[scope.$index].status === 1)?_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.pauseJob(_vm.tabData[scope.$index].id)}}},[_vm._v(\"停用\\n          \")]):_vm._e(),_vm._v(\" \"),(_vm.tabData[scope.$index].status === 0)?_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.resumeTask(_vm.tabData[scope.$index].id)}}},[_vm._v(\"启用\\n          \")]):_vm._e(),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.getJobDetail(_vm.tabData[scope.$index].id)}}},[_vm._v(\"编辑\\n          \")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.removeTask(_vm.tabData[scope.$index].id)}}},[_vm._v(\"删除\\n          \")])]}}],null,true)}):_c('el-table-column',{key:index,attrs:{\"prop\":col.prop,\"label\":col.label,\"align\":\"center\",\"show-overflow-tooltip\":\"\",\"width\":\"250px\"}})]})],2),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"编辑\",\"visible\":_vm.editDialogVisible,\"width\":\"80%\"},on:{\"update:visible\":function($event){_vm.editDialogVisible=$event}}},[_c('div',[_c('el-card',{staticClass:\"box-card\"},[_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":4}},[_c('span',[_vm._v(\"任务名称: \"),_c('span',{staticStyle:{\"color\":\"red\"}},[_vm._v(\"*\")])])]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":8,\"pull\":2}},[_c('el-input',{staticStyle:{\"width\":\"400px\"},attrs:{\"placeholder\":\"必填项:请输入内容\",\"clearable\":\"\",\"required\":\"true\",\"disabled\":\"\"},model:{value:(_vm.editTaskDetail['id']),callback:function ($$v) {_vm.$set(_vm.editTaskDetail, 'id', $$v)},expression:\"editTaskDetail['id']\"}})],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":4}},[_c('span',[_vm._v(\"任务描述: \"),_c('span',{staticStyle:{\"color\":\"red\"}},[_vm._v(\"*\")])])]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":8,\"pull\":2}},[_c('el-input',{staticStyle:{\"width\":\"400px\"},attrs:{\"placeholder\":\"必填项:请输入内容\",\"clearable\":\"\",\"required\":\"true\",\"type\":\"textarea\",\"rows\":3},model:{value:(_vm.editTaskDetail['job_name']),callback:function ($$v) {_vm.$set(_vm.editTaskDetail, 'job_name', $$v)},expression:\"editTaskDetail['job_name']\"}})],1)],1),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":4}},[_c('span',[_vm._v(\"所属项目: \")])]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":8,\"pull\":2}},[_c('el-select',{staticClass:\"taskDetail\",staticStyle:{\"width\":\"400px\"},attrs:{\"placeholder\":\"必填项:请选择\",\"clearable\":\"\",\"required\":\"true\"},on:{\"change\":_vm.getConditionsForEdit},model:{value:(_vm.editTaskDetail['project_id']),callback:function ($$v) {_vm.$set(_vm.editTaskDetail, 'project_id', $$v)},expression:\"editTaskDetail['project_id']\"}},_vm._l((_vm.editProjectList),function(item){return _c('el-option',{key:item.label,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":4}},[_c('span',[_vm._v(\"所属业务: \")])]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":8,\"pull\":2}},[_c('el-select',{staticClass:\"taskDetail\",staticStyle:{\"width\":\"400px\"},attrs:{\"placeholder\":\"必填项:请选择\",\"clearable\":\"\",\"required\":\"true\"},on:{\"focus\":function($event){return _vm.checkParentForEdit('business')},\"change\":_vm.changeBusinessId},model:{value:(_vm.editTaskDetail['business_id']),callback:function ($$v) {_vm.$set(_vm.editTaskDetail, 'business_id', $$v)},expression:\"editTaskDetail['business_id']\"}},_vm._l((_vm.editBusinessList),function(item){return _c('el-option',{key:item.label,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1)],1),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":4}},[_c('span',[_vm._v(\"场景类型: \")])]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":8,\"pull\":2}},[_c('el-select',{staticClass:\"taskDetail\",staticStyle:{\"width\":\"400px\"},attrs:{\"placeholder\":\"必填项:请选择\",\"clearable\":\"\",\"required\":\"true\"},on:{\"change\":_vm.changeSceneType,\"focus\":function($event){return _vm.checkParentForEdit('scene_type')}},model:{value:(_vm.editTaskDetail['scene_type']),callback:function ($$v) {_vm.$set(_vm.editTaskDetail, 'scene_type', $$v)},expression:\"editTaskDetail['scene_type']\"}},_vm._l((_vm.editSceneTypeList),function(item){return _c('el-option',{key:item.label,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":4}},[_c('span',[_vm._v(\"场景集:\"),_c('span',{staticStyle:{\"color\":\"red\"}},[_vm._v(\"*\")])])]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":8,\"pull\":2}},[_c('el-select',{staticClass:\"taskDetail\",staticStyle:{\"width\":\"400px\"},attrs:{\"placeholder\":\"必填项:请选择\",\"multiple\":\"\",\"collapse-tags\":\"\",\"clearable\":\"\",\"required\":\"true\",\"filterable\":\"\"},on:{\"focus\":function($event){return _vm.checkParentForEdit('scene')}},model:{value:(_vm.editTaskDetail['scene_list']),callback:function ($$v) {_vm.$set(_vm.editTaskDetail, 'scene_list', $$v)},expression:\"editTaskDetail['scene_list']\"}},_vm._l((_vm.editSceneList),function(item){return _c('el-option',{key:item.id,attrs:{\"label\":'【' + item.id + '】' + item.scene_name,\"value\":item.id}})}),1)],1)],1),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":4}},[_c('span',[_vm._v(\"执行计划:\"),_c('span',{staticStyle:{\"color\":\"red\"}},[_vm._v(\"*\")])])]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":8,\"pull\":2}},[_c('el-input',{staticStyle:{\"width\":\"400px\"},attrs:{\"placeholder\":\"必填项:cron表达式；【例:*/1 * * * *】\",\"clearable\":\"\",\"required\":\"true\"},model:{value:(_vm.editTaskDetail['job_schedule']),callback:function ($$v) {_vm.$set(_vm.editTaskDetail, 'job_schedule', $$v)},expression:\"editTaskDetail['job_schedule']\"}})],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":4}},[_c('span',[_vm._v(\"调用方法: \"),_c('span',{staticStyle:{\"color\":\"red\"}},[_vm._v(\"*\")])])]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":8,\"pull\":2}},[_c('el-select',{staticClass:\"taskDetail\",staticStyle:{\"width\":\"400px\"},attrs:{\"placeholder\":\"必填项:请选择\",\"clearable\":\"\",\"required\":\"true\",\"filterable\":\"\"},model:{value:(_vm.editTaskDetail['job_method']),callback:function ($$v) {_vm.$set(_vm.editTaskDetail, 'job_method', $$v)},expression:\"editTaskDetail['job_method']\"}},_vm._l((_vm.editExecuteFunc),function(item){return _c('el-option',{key:item.label,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1)],1)],1)],1),_vm._v(\" \"),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.editDialogVisible = false}}},[_vm._v(\"取 消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.editTask}},[_vm._v(\"保 存\")])],1)]),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"场景列表\",\"visible\":_vm.tabDialog},on:{\"update:visible\":function($event){_vm.tabDialog=$event}}},[_c('el-table',{attrs:{\"data\":_vm.sceneNameList,\"border\":\"\",\"size\":\"mini\",\"max-height\":\"350px\",\"row-class-name\":_vm.tableRowClassName}},[_c('el-table-column',{attrs:{\"property\":\"id\",\"label\":\"场景id\",\"width\":\"100px\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"property\":\"name\",\"align\":\"center\",\"label\":\"场景名称\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"property\":\"status\",\"label\":\"状态\",\"width\":\"100px\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.status === 0)?_c('el-button',{attrs:{\"type\":\"danger\",\"disabled\":\"\",\"icon\":\"el-icon-close\",\"circle\":\"\",\"size\":\"mini\"}}):(scope.row.status === 1)?_c('el-button',{attrs:{\"type\":\"success\",\"icon\":\"el-icon-check\",\"circle\":\"\",\"disabled\":\"\",\"size\":\"mini\"}}):_vm._e()]}}])})],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-5a313fd6\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/InterfaceTestTemplate/TaskTemplate/TaskTable.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5a313fd6\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./TaskTable.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./TaskTable.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5a313fd6\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./TaskTable.vue\"\n/* template functional */\n  var __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-5a313fd6\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/InterfaceTestTemplate/TaskTemplate/TaskTable.vue\n// module id = null\n// module chunks = ","<template>\n  <el-card class=\"box-card\">\n    <div>\n      <el-row style=\"margin-top: -10px\" class=\"conditionBar\" :gutter=\"40\">\n        <el-col :span=\"5\">\n          <span>任务名称:&nbsp;</span>\n          <el-input\n            placeholder=\"输入任务名称\"\n            v-model=\"taskId\"\n            clearable\n            size=\"mini\"\n          >\n          </el-input>\n        </el-col>\n        <el-col :span=\"5\">\n          <span>任务描述:&nbsp;</span>\n          <el-input\n            placeholder=\"输入任务描述\"\n            v-model=\"taskName\"\n            clearable\n            size=\"mini\"\n          >\n          </el-input>\n        </el-col>\n        <el-col :span=\"5\">\n          <span>状&nbsp;&nbsp;&nbsp;态:&nbsp;</span>\n          <el-select\n            v-model=\"taskStatus\"\n            filterable\n            placeholder=\"请选择\"\n            clearable\n            size=\"mini\"\n          >\n            <el-option\n              v-for=\"item in statusList\"\n              :key=\"item.label\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            >\n            </el-option>\n          </el-select>\n        </el-col>\n        <el-col :span=\"6\">\n          <div>\n            <el-button type=\"primary\" round @click=\"search\" size=\"mini\"\n              >查询\n            </el-button>\n            <el-button type=\"success\" round @click=\"openAddDialog\" size=\"mini\"\n              >新增\n            </el-button>\n            <el-button type=\"info\" round @click=\"reset\" size=\"mini\"\n              >重置\n            </el-button>\n          </div>\n        </el-col>\n      </el-row>\n      <div>\n        <taskTab\n          :tabData=\"tableData\"\n          :tabHeader=\"tableHeader\"\n          @search=\"search\"\n        ></taskTab>\n      </div>\n      <el-dialog\n        title=\"新增\"\n        :visible.sync=\"dialogVisible\"\n        width=\"80%\"\n        @close=\"clearData\"\n      >\n        <div>\n          <el-card class=\"box-card\">\n            <el-row :gutter=\"20\">\n              <el-col :span=\"4\">\n                <span>任务名称: <span style=\"color:red\">*</span></span>\n              </el-col>\n              <el-col :span=\"8\" :pull=\"2\">\n                <el-input\n                  style=\"width: 400px\"\n                  placeholder=\"必填项:请输入内容\"\n                  v-model=\"taskDetail['id']\"\n                  clearable\n                  required=\"true\"\n                >\n                </el-input>\n              </el-col>\n              <el-col :span=\"4\">\n                <span>任务描述: <span style=\"color:red\">*</span></span>\n              </el-col>\n              <el-col :span=\"8\" :pull=\"2\">\n                <el-input\n                  style=\"width: 400px\"\n                  placeholder=\"必填项:请输入内容\"\n                  v-model=\"taskDetail['job_name']\"\n                  clearable\n                  required=\"true\"\n                  type=\"textarea\"\n                  :rows=\"3\"\n                >\n                </el-input>\n              </el-col>\n            </el-row>\n            <el-row :gutter=\"20\">\n              <el-col :span=\"4\">\n                <span>所属项目: </span>\n              </el-col>\n              <el-col :span=\"8\" :pull=\"2\">\n                <el-select\n                  style=\"width: 400px\"\n                  placeholder=\"必填项:请选择\"\n                  v-model=\"taskDetail['project_id']\"\n                  clearable\n                  required=\"true\"\n                  @change=\"getConditionsForAdd\"\n                  class=\"taskDetail\"\n                >\n                  <el-option\n                    v-for=\"item in addProjectList\"\n                    :key=\"item.label\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                  >\n                  </el-option>\n                </el-select>\n              </el-col>\n              <el-col :span=\"4\">\n                <span>所属业务: </span>\n              </el-col>\n              <el-col :span=\"8\" :pull=\"2\">\n                <el-select\n                  style=\"width: 400px\"\n                  placeholder=\"必填项:请选择\"\n                  v-model=\"taskDetail['business_id']\"\n                  clearable\n                  required=\"true\"\n                  class=\"taskDetail\"\n                  @focus=\"checkParentForAdd('business')\"\n                  @change=\"changeBusinessId\"\n                >\n                  <el-option\n                    v-for=\"item in addBusinessList\"\n                    :key=\"item.label\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                  >\n                  </el-option>\n                </el-select>\n              </el-col>\n            </el-row>\n            <el-row :gutter=\"20\">\n              <el-col :span=\"4\">\n                <span>场景类型: </span>\n              </el-col>\n              <el-col :span=\"8\" :pull=\"2\">\n                <el-select\n                  style=\"width: 400px\"\n                  placeholder=\"必填项:请选择\"\n                  v-model=\"taskDetail['scene_type']\"\n                  clearable\n                  required=\"true\"\n                  @change=\"changeSceneType\"\n                  class=\"taskDetail\"\n                  @focus=\"checkParentForAdd('scene_type')\"\n                >\n                  <el-option\n                    v-for=\"item in addSceneTypeList\"\n                    :key=\"item.label\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                  >\n                  </el-option>\n                </el-select>\n              </el-col>\n              <el-col :span=\"4\">\n                <span>场景集:<span style=\"color:red\">*</span></span>\n              </el-col>\n              <el-col :span=\"8\" :pull=\"2\">\n                <el-select\n                  style=\"width: 400px\"\n                  placeholder=\"必填项:请选择\"\n                  v-model=\"taskDetail['scene_list']\"\n                  multiple\n                  collapse-tags\n                  clearable\n                  required=\"true\"\n                  filterable\n                  class=\"taskDetail\"\n                  @focus=\"checkParentForAdd('scene')\"\n                >\n                  <el-option\n                    v-for=\"item in addSceneList\"\n                    :key=\"item.id\"\n                    :label=\"'【' + item.id + '】' + item.scene_name\"\n                    :value=\"item.id\"\n                  >\n                  </el-option>\n                </el-select>\n              </el-col>\n            </el-row>\n            <el-row :gutter=\"20\">\n              <el-col :span=\"4\">\n                <span>执行计划:<span style=\"color:red\">*</span></span>\n              </el-col>\n              <el-col :span=\"8\" :pull=\"2\">\n                <el-input\n                  style=\"width: 400px\"\n                  placeholder=\"必填项:cron表达式；【例:*/1 * * * *】\"\n                  v-model=\"taskDetail['job_schedule']\"\n                  clearable\n                  required=\"true\"\n                >\n                </el-input>\n              </el-col>\n              <el-col :span=\"4\">\n                <span>调用方法: <span style=\"color:red\">*</span></span>\n              </el-col>\n              <el-col :span=\"8\" :pull=\"2\">\n                <el-select\n                  style=\"width: 400px\"\n                  placeholder=\"必填项:请选择\"\n                  v-model=\"taskDetail['job_method']\"\n                  clearable\n                  required=\"true\"\n                  filterable\n                  class=\"taskDetail\"\n                >\n                  <el-option\n                    v-for=\"item in addExecuteFunc\"\n                    :key=\"item.label\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                  >\n                  </el-option>\n                </el-select>\n              </el-col>\n            </el-row>\n          </el-card>\n        </div>\n        <span slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"dialogVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"addTask\">保 存</el-button>\n        </span>\n      </el-dialog>\n      <el-pagination\n        @current-change=\"getTaskList\"\n        :current-page.sync=\"currentPage\"\n        :page-size=\"pageSize\"\n        layout=\"total,slot, prev, pager, next, jumper\"\n        :total=\"total\"\n        style=\"margin-top: 10px\"\n        size=\"mini\"\n      >\n        <span>{{ pageSize }}条/页</span>\n      </el-pagination>\n    </div>\n  </el-card>\n</template>\n\n<script>\nimport TaskTab from '../InterfaceTestTemplate/TaskTemplate/TaskTable';\n\nexport default {\n  name: 'Task',\n  components: { taskTab: TaskTab },\n  data() {\n    return {\n      addProjectList: [],\n      addBusinessList: [],\n      addSceneTypeList: [],\n      addSceneList: [],\n      addExecuteFunc: [],\n      tableData: [],\n      tableHeader: [],\n      taskId: '',\n      taskName: '',\n      taskStatus: '',\n      statusList: [],\n      currentPage: 1,\n      pageSize: 0,\n      total: 0,\n      taskDetail: {\n        id: '',\n        job_name: '',\n        project_id: '',\n        business_id: '',\n        scene_type: '',\n        scene_list: '',\n        job_schedule: '',\n        job_method: ''\n      },\n      dialogVisible: false\n    };\n  },\n  methods: {\n    // 打开新增弹窗\n    openAddDialog() {\n      this.dialogVisible = true;\n      this.getConditionsForAdd();\n      this.addSceneTypeList = [];\n    },\n    // 重置\n    reset() {\n      this.taskId = '';\n      this.taskName = '';\n      this.taskStatus = '';\n      this.search();\n    },\n    // 清空数据\n    clearData() {\n      this.taskDetail = {\n        id: '',\n        job_name: '',\n        project_id: '',\n        business_id: '',\n        scene_type: '',\n        scene_list: '',\n        job_schedule: '',\n        job_method: ''\n      };\n      this.addProjectList = [];\n      this.addBusinessList = [];\n      this.addExecuteFunc = [];\n      this.addSceneTypeList = [];\n    },\n    // 校验输入、选项框是否为空\n    isEmpty(obj) {\n      if (obj === '' || obj === undefined) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    // 所属业务改变\n    changeBusinessId() {\n      this.taskDetail['scene_list'] = [];\n      this.taskDetail['scene_type'] = '';\n      this.addSceneList = [];\n    },\n    // 场景类型改变\n    changeSceneType() {\n      this.taskDetail['scene_list'] = [];\n      if (\n        this.taskDetail['project_id'] !== '' &&\n        this.taskDetail['business_id'] !== '' &&\n        this.taskDetail['scene_type'] !== ''\n      ) {\n        // 指定参数格式\n        let config = {\n          headers: {\n            'Content-Type': 'application/json;charset=UTF-8'\n          }\n        };\n        //  let url = String.format('{0}/jobInterface/addTask', 'http://127.0.0.1:5000')\n        let url = String.format(\n          '{0}/jobInterface/querySceneByConditions',\n          this.GLOBAL.MONITOR_URL\n        );\n        let conditions = {\n          project_id: this.taskDetail['project_id'],\n          business_id: this.taskDetail['business_id'],\n          scene_type: this.taskDetail['scene_type']\n        };\n        this.axios\n          .post(url, JSON.stringify(conditions), config)\n          .then(response => {\n            this.addSceneList = response.data.sceneList;\n          })\n          .catch(response => {\n            return response;\n          });\n      }\n    },\n    // 检查所属项目是否选中\n    checkParentForAdd(item) {\n      if (item === 'scene') {\n        if (\n          this.taskDetail['project_id'] === '' ||\n          this.taskDetail['business_id'] === '' ||\n          this.taskDetail['scene_type'] === ''\n        ) {\n          this.$message({\n            type: 'error',\n            message: '请先选择所属项目、所属业务、场景类型!'\n          });\n        }\n      } else if (item === 'business') {\n        if (this.taskDetail['project_id'] === '') {\n          this.$message({\n            type: 'error',\n            message: '请先选择所属项目!'\n          });\n        }\n      }\n      // else if (item === 'scene_type') {\n      //   if (\n      //     this.taskDetail['project_id'] === '' ||\n      //     this.taskDetail['business_id'] === ''\n      //   ) {\n      //     this.$message({\n      //       type: 'error',\n      //       message: '请先选择所属项目、所属业务!'\n      //     });\n      //   }\n      // }\n    },\n    getConditionsForAdd() {\n      this.taskDetail['business_id'] = '';\n      this.taskDetail['scene_list'] = [];\n      this.taskDetail['scene_type'] = '';\n      this.addSceneTypeList = [];\n      this.addSceneList = [];\n      // 获取查询条件\n      // let url = String.format('{0}/jobInterface/taskConditions', 'http://127.0.0.1:5000')\n      let url = String.format(\n        '{0}/jobInterface/taskConditions?project_id={1}',\n        this.GLOBAL.MONITOR_URL,\n        this.taskDetail['project_id']\n      );\n      this.axios\n        .get(url)\n        .then(response => {\n          this.addProjectList = response.data.data.projectList;\n          this.addExecuteFunc = response.data.data.executeFunc;\n          this.addBusinessList = response.data.data.businessList;\n          this.addSceneTypeList = response.data.data.sceneTypeList;\n          return response;\n        })\n        .catch(response => {\n          return response;\n        });\n    },\n    getConditions() {\n      // 获取查询条件\n      // let url = String.format('{0}/jobInterface/taskConditions', 'http://127.0.0.1:5000')\n      let url = String.format(\n        '{0}/jobInterface/taskConditions?project_id={1}',\n        this.GLOBAL.MONITOR_URL,\n        ''\n      );\n      this.axios\n        .get(url)\n        .then(response => {\n          this.statusList = response.data.data.statusList;\n          return response;\n        })\n        .catch(response => {\n          return response;\n        });\n    },\n    // 新增保存job\n    addTask() {\n      if (\n        this.isEmpty(this.taskDetail['id']) ||\n        this.isEmpty(this.taskDetail['job_name']) ||\n        this.isEmpty(this.taskDetail['job_method']) ||\n        this.isEmpty(this.taskDetail['job_schedule']) ||\n        this.isEmpty(this.taskDetail['scene_list'].join(','))\n      ) {\n        this.Message.error('警告:请填写必填项！');\n      } else {\n        // 指定参数格式\n        let config = {\n          headers: {\n            'Content-Type': 'application/json;charset=UTF-8'\n          }\n        };\n        //  let url = String.format('{0}/jobInterface/addTask', 'http://127.0.0.1:5000')\n        let url = String.format(\n          '{0}/jobInterface/addTask',\n          this.GLOBAL.MONITOR_URL\n        );\n        this.taskDetail['param'] = this.taskDetail['scene_list'].join(',');\n        this.axios\n          .post(url, JSON.stringify(this.taskDetail), config)\n          .then(response => {\n            let responseCode = response.data.code;\n            if (responseCode === '200') {\n              this.Message.success(response.data.msg);\n              this.dialogVisible = false;\n              // 刷新页面\n              this.getTaskList();\n            } else {\n              this.Message.error(response.data.msg);\n              // 刷新页面\n              this.getTaskList();\n            }\n            return response;\n          })\n          .catch(response => {\n            return response;\n          });\n      }\n    },\n    search() {\n      this.getConditions();\n      this.currentPage = 1;\n      this.getTaskList();\n    },\n    // 获取任务列表\n    getTaskList() {\n      // 指定参数格式\n      let config = {\n        headers: {\n          'Content-Type': 'application/json;charset=UTF-8'\n        }\n      };\n      // let url = String.format('{0}/jobInterface/taskList', 'http://127.0.0.1:5000')\n      let url = String.format(\n        '{0}/jobInterface/taskList',\n        this.GLOBAL.MONITOR_URL\n      );\n      let conditions = {\n        id: this.taskId,\n        job_name: this.taskName,\n        status: this.taskStatus,\n        page_index: this.currentPage\n      };\n      this.axios\n        .post(url, JSON.stringify(conditions), config)\n        .then(response => {\n          this.total = response.data.total;\n          this.pageSize = response.data.pageSize;\n          let jobInfo = response.data.jobInfo;\n          this.tableHeader = jobInfo.tableHeader;\n          this.tableData = jobInfo.tableData;\n          return response;\n        })\n        .catch(response => {\n          return response;\n        });\n    }\n  },\n  beforeMount() {\n    this.getConditions();\n    this.getTaskList();\n  }\n};\n</script>\n\n<style scoped>\n.el-row {\n  line-height: 60px;\n  margin-top: 10px;\n}\n\n.taskDetail >>> .el-input__inner {\n  height: 40px !important;\n  width: 400px !important;\n}\n\n.conditionBar .el-col {\n  display: flex;\n}\n\n.conditionBar .el-col span {\n  white-space: nowrap;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/rootPageTemplate/Task.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-card',{staticClass:\"box-card\"},[_c('div',[_c('el-row',{staticClass:\"conditionBar\",staticStyle:{\"margin-top\":\"-10px\"},attrs:{\"gutter\":40}},[_c('el-col',{attrs:{\"span\":5}},[_c('span',[_vm._v(\"任务名称: \")]),_vm._v(\" \"),_c('el-input',{attrs:{\"placeholder\":\"输入任务名称\",\"clearable\":\"\",\"size\":\"mini\"},model:{value:(_vm.taskId),callback:function ($$v) {_vm.taskId=$$v},expression:\"taskId\"}})],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":5}},[_c('span',[_vm._v(\"任务描述: \")]),_vm._v(\" \"),_c('el-input',{attrs:{\"placeholder\":\"输入任务描述\",\"clearable\":\"\",\"size\":\"mini\"},model:{value:(_vm.taskName),callback:function ($$v) {_vm.taskName=$$v},expression:\"taskName\"}})],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":5}},[_c('span',[_vm._v(\"状   态: \")]),_vm._v(\" \"),_c('el-select',{attrs:{\"filterable\":\"\",\"placeholder\":\"请选择\",\"clearable\":\"\",\"size\":\"mini\"},model:{value:(_vm.taskStatus),callback:function ($$v) {_vm.taskStatus=$$v},expression:\"taskStatus\"}},_vm._l((_vm.statusList),function(item){return _c('el-option',{key:item.label,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":6}},[_c('div',[_c('el-button',{attrs:{\"type\":\"primary\",\"round\":\"\",\"size\":\"mini\"},on:{\"click\":_vm.search}},[_vm._v(\"查询\\n          \")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"success\",\"round\":\"\",\"size\":\"mini\"},on:{\"click\":_vm.openAddDialog}},[_vm._v(\"新增\\n          \")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"info\",\"round\":\"\",\"size\":\"mini\"},on:{\"click\":_vm.reset}},[_vm._v(\"重置\\n          \")])],1)])],1),_vm._v(\" \"),_c('div',[_c('taskTab',{attrs:{\"tabData\":_vm.tableData,\"tabHeader\":_vm.tableHeader},on:{\"search\":_vm.search}})],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"新增\",\"visible\":_vm.dialogVisible,\"width\":\"80%\"},on:{\"update:visible\":function($event){_vm.dialogVisible=$event},\"close\":_vm.clearData}},[_c('div',[_c('el-card',{staticClass:\"box-card\"},[_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":4}},[_c('span',[_vm._v(\"任务名称: \"),_c('span',{staticStyle:{\"color\":\"red\"}},[_vm._v(\"*\")])])]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":8,\"pull\":2}},[_c('el-input',{staticStyle:{\"width\":\"400px\"},attrs:{\"placeholder\":\"必填项:请输入内容\",\"clearable\":\"\",\"required\":\"true\"},model:{value:(_vm.taskDetail['id']),callback:function ($$v) {_vm.$set(_vm.taskDetail, 'id', $$v)},expression:\"taskDetail['id']\"}})],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":4}},[_c('span',[_vm._v(\"任务描述: \"),_c('span',{staticStyle:{\"color\":\"red\"}},[_vm._v(\"*\")])])]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":8,\"pull\":2}},[_c('el-input',{staticStyle:{\"width\":\"400px\"},attrs:{\"placeholder\":\"必填项:请输入内容\",\"clearable\":\"\",\"required\":\"true\",\"type\":\"textarea\",\"rows\":3},model:{value:(_vm.taskDetail['job_name']),callback:function ($$v) {_vm.$set(_vm.taskDetail, 'job_name', $$v)},expression:\"taskDetail['job_name']\"}})],1)],1),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":4}},[_c('span',[_vm._v(\"所属项目: \")])]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":8,\"pull\":2}},[_c('el-select',{staticClass:\"taskDetail\",staticStyle:{\"width\":\"400px\"},attrs:{\"placeholder\":\"必填项:请选择\",\"clearable\":\"\",\"required\":\"true\"},on:{\"change\":_vm.getConditionsForAdd},model:{value:(_vm.taskDetail['project_id']),callback:function ($$v) {_vm.$set(_vm.taskDetail, 'project_id', $$v)},expression:\"taskDetail['project_id']\"}},_vm._l((_vm.addProjectList),function(item){return _c('el-option',{key:item.label,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":4}},[_c('span',[_vm._v(\"所属业务: \")])]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":8,\"pull\":2}},[_c('el-select',{staticClass:\"taskDetail\",staticStyle:{\"width\":\"400px\"},attrs:{\"placeholder\":\"必填项:请选择\",\"clearable\":\"\",\"required\":\"true\"},on:{\"focus\":function($event){return _vm.checkParentForAdd('business')},\"change\":_vm.changeBusinessId},model:{value:(_vm.taskDetail['business_id']),callback:function ($$v) {_vm.$set(_vm.taskDetail, 'business_id', $$v)},expression:\"taskDetail['business_id']\"}},_vm._l((_vm.addBusinessList),function(item){return _c('el-option',{key:item.label,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1)],1),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":4}},[_c('span',[_vm._v(\"场景类型: \")])]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":8,\"pull\":2}},[_c('el-select',{staticClass:\"taskDetail\",staticStyle:{\"width\":\"400px\"},attrs:{\"placeholder\":\"必填项:请选择\",\"clearable\":\"\",\"required\":\"true\"},on:{\"change\":_vm.changeSceneType,\"focus\":function($event){return _vm.checkParentForAdd('scene_type')}},model:{value:(_vm.taskDetail['scene_type']),callback:function ($$v) {_vm.$set(_vm.taskDetail, 'scene_type', $$v)},expression:\"taskDetail['scene_type']\"}},_vm._l((_vm.addSceneTypeList),function(item){return _c('el-option',{key:item.label,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":4}},[_c('span',[_vm._v(\"场景集:\"),_c('span',{staticStyle:{\"color\":\"red\"}},[_vm._v(\"*\")])])]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":8,\"pull\":2}},[_c('el-select',{staticClass:\"taskDetail\",staticStyle:{\"width\":\"400px\"},attrs:{\"placeholder\":\"必填项:请选择\",\"multiple\":\"\",\"collapse-tags\":\"\",\"clearable\":\"\",\"required\":\"true\",\"filterable\":\"\"},on:{\"focus\":function($event){return _vm.checkParentForAdd('scene')}},model:{value:(_vm.taskDetail['scene_list']),callback:function ($$v) {_vm.$set(_vm.taskDetail, 'scene_list', $$v)},expression:\"taskDetail['scene_list']\"}},_vm._l((_vm.addSceneList),function(item){return _c('el-option',{key:item.id,attrs:{\"label\":'【' + item.id + '】' + item.scene_name,\"value\":item.id}})}),1)],1)],1),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":4}},[_c('span',[_vm._v(\"执行计划:\"),_c('span',{staticStyle:{\"color\":\"red\"}},[_vm._v(\"*\")])])]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":8,\"pull\":2}},[_c('el-input',{staticStyle:{\"width\":\"400px\"},attrs:{\"placeholder\":\"必填项:cron表达式；【例:*/1 * * * *】\",\"clearable\":\"\",\"required\":\"true\"},model:{value:(_vm.taskDetail['job_schedule']),callback:function ($$v) {_vm.$set(_vm.taskDetail, 'job_schedule', $$v)},expression:\"taskDetail['job_schedule']\"}})],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":4}},[_c('span',[_vm._v(\"调用方法: \"),_c('span',{staticStyle:{\"color\":\"red\"}},[_vm._v(\"*\")])])]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":8,\"pull\":2}},[_c('el-select',{staticClass:\"taskDetail\",staticStyle:{\"width\":\"400px\"},attrs:{\"placeholder\":\"必填项:请选择\",\"clearable\":\"\",\"required\":\"true\",\"filterable\":\"\"},model:{value:(_vm.taskDetail['job_method']),callback:function ($$v) {_vm.$set(_vm.taskDetail, 'job_method', $$v)},expression:\"taskDetail['job_method']\"}},_vm._l((_vm.addExecuteFunc),function(item){return _c('el-option',{key:item.label,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1)],1)],1)],1),_vm._v(\" \"),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.dialogVisible = false}}},[_vm._v(\"取 消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addTask}},[_vm._v(\"保 存\")])],1)]),_vm._v(\" \"),_c('el-pagination',{staticStyle:{\"margin-top\":\"10px\"},attrs:{\"current-page\":_vm.currentPage,\"page-size\":_vm.pageSize,\"layout\":\"total,slot, prev, pager, next, jumper\",\"total\":_vm.total,\"size\":\"mini\"},on:{\"current-change\":_vm.getTaskList,\"update:currentPage\":function($event){_vm.currentPage=$event},\"update:current-page\":function($event){_vm.currentPage=$event}}},[_c('span',[_vm._v(_vm._s(_vm.pageSize)+\"条/页\")])])],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-33afa786\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/rootPageTemplate/Task.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-33afa786\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Task.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Task.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-33afa786\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Task.vue\"\n/* template functional */\n  var __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-33afa786\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/rootPageTemplate/Task.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}