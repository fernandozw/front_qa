{"version":3,"sources":["webpack:///src/components/WebUiTestTemplate/CronDialog.vue","webpack:///./src/components/WebUiTestTemplate/CronDialog.vue?72b9","webpack:///./src/components/WebUiTestTemplate/CronDialog.vue","webpack:///src/components/rootPageTemplate/WebUiTask.vue","webpack:///./src/components/rootPageTemplate/WebUiTask.vue?f8eb","webpack:///./src/components/rootPageTemplate/WebUiTask.vue"],"names":["CronDialog","Number","Boolean","_this","this","format","type","GLOBAL","WEBUI_URL","axios","post","url","stringify_default","cronDetail","then","response","code","msg","catch","_this2","get","statusList","_this3","data","_this4","getPageAndCase","getConditions","cronId","item","dataIntArr","visible","detail","WebUiTestTemplate_CronDialog","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","title","dialogTitle","dialogVisible","width","id","on","update:visible","$event","close","inline","model","size","gutter","span","label","staticStyle","placeholder","clearable","value","callback","$$v","$set","expression","_v","multiple","filterable","_l","group","key","slot","click","saveCron","_s","btnText","staticRenderFns","WebUiTask","__webpack_require__","normalizeComponent","ssrContext","caseIds","param","statusMap","resetSearchForm","currentPage","searchForm","cronList","total","_ref","row","$confirm","String","getCondition","getCronList","rootPageTemplate_WebUiTask","align","start-placeholder","end-placeholder","default-time","value-format","float","margin-right","clickAddBtn","tableData","border","cell-style","text-align","header-cell-style","row-class-name","tableRowClassName","fixed","prop","show-overflow-tooltip","scopedSlots","_u","fn","scope","$index","status","execCases","args","deleteCron","margin-top","current-page","page-size","pageSize","layout","current-change","update:currentPage","update:current-page","cron-id","dialogVisibleType","listenToChildEvent","callbackFunc","_e","WebUiTask_Component","WebUiTask_normalizeComponent","__webpack_exports__"],"mappings":"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","file":"static/js/12.a29455126abfcb8dee6c.js","sourcesContent":["<template>\n  <div>\n    <el-dialog\n      :title=\"dialogTitle\"\n      :visible.sync=\"dialogVisible\"\n      width=\"80%\"\n      class=\"element-dialog\"\n      @close=\"close\"\n      id=\"elementDialog\"\n    >\n      <div>\n        <el-card class=\"box-card\">\n          <el-form :inline=\"true\" :model=\"cronDetail\" size=\"mini\">\n            <el-row :gutter=\"20\">\n              <el-col :span=\"12\">\n                <el-form-item label=\"任务名称:\">\n                  <el-input\n                    placeholder=\"必填项:请输入任务名称\"\n                    v-model=\"cronDetail.cronName\"\n                    style=\"width: 300px\"\n                    clearable\n                  >\n                  </el-input>\n                </el-form-item>\n              </el-col>\n              <el-col :span=\"12\">\n                <el-form-item label=\"用例集合:\">\n                  <el-select\n                    size=\"mini\"\n                    v-model=\"cronDetail.args\"\n                    placeholder=\"请选择用例\"\n                    multiple\n                    filterable\n                    style=\"width: 400px\"\n                  >\n                    <el-option-group\n                      v-for=\"group in pageAndCaseOptions\"\n                      :key=\"group.label\"\n                      :label=\"group.label\"\n                    >\n                      <el-option\n                        v-for=\"item in group.options\"\n                        :key=\"item.value\"\n                        :label=\"'「' + item.value + '」' + item.label\"\n                        :value=\"item.value\"\n                      >\n                      </el-option>\n                    </el-option-group>\n                  </el-select>\n                </el-form-item>\n              </el-col>\n            </el-row>\n            <el-row :gutter=\"20\">\n              <el-col :span=\"12\">\n                <el-form-item label=\"调度时间:\">\n                  <el-input\n                    placeholder=\"必填项:请输入内容\"\n                    v-model=\"cronDetail.execTime\"\n                    clearable\n                    style=\"width: 300px\"\n                  >\n                  </el-input>\n                </el-form-item>\n              </el-col>\n              <el-col :span=\"12\">\n                <el-form-item label=\"运行状态:\">\n                  <el-select\n                    v-model=\"cronDetail.status\"\n                    filterable\n                    placeholder=\"选择运行状态\"\n                    clearable\n                  >\n                    <el-option\n                      v-for=\"item in statusList\"\n                      :key=\"item.value\"\n                      :label=\"item.label\"\n                      :value=\"item.value\"\n                    >\n                    </el-option>\n                  </el-select>\n                </el-form-item>\n              </el-col>\n            </el-row>\n          </el-form>\n        </el-card>\n      </div>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"mini\" type=\"info\" @click=\"close\">取 消</el-button>\n        <el-button size=\"mini\" type=\"primary\" @click=\"saveCron\">\n          {{ btnText }}\n        </el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'cronDialog',\n  props: {\n    cronId: {\n      type: Number,\n      default: null\n    },\n    type: {\n      type: Number,\n      default: 1 // 1 新增 2 编辑 3 新增\n    },\n    visible: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      dialogVisible: true,\n      cronDetail: {\n        cornName: '',\n        execTime: '',\n        args: [],\n        status: ''\n      },\n      statusList: [],\n      pageAndCaseOptions: []\n    };\n  },\n  methods: {\n    // 新增、编辑、复制任务\n    saveCron() {\n      let url = String.format(\n        this.type === 2 ? '{0}/cron/updateCron' : '{0}/cron/addCron',\n        this.GLOBAL.WEBUI_URL\n      );\n      // 指定参数格式\n      let config = {\n        headers: {\n          'Content-Type': 'application/json;charset=UTF-8'\n        }\n      };\n      this.cronDetail.args = this.cronDetail.args.join(',');\n      this.axios\n        .post(url, JSON.stringify(this.cronDetail), config)\n        .then(response => {\n          let responseCode = response.data.code;\n          if (responseCode === '1000') {\n            this.Message.success(response.data.msg);\n            // 调用父组件的查询方法\n            this.$emit('listenToChildEvent', true);\n          } else {\n            this.Message.error(response.data.msg);\n          }\n          return response;\n        })\n        .catch(response => {\n          // 调用父组件的查询方法\n          // this.$emit('listenToChildEvent', true);\n          return response;\n        });\n    },\n    // 关闭dialog弹框\n    close() {\n      this.$emit('listenToChildEvent', false);\n    },\n    // 获取查询条件\n    getConditions() {\n      let url = String.format('{0}/cron/getCondition', this.GLOBAL.WEBUI_URL);\n      this.axios\n        .get(url)\n        .then(response => {\n          this.statusList = response.data.data.statusList;\n          return response;\n        })\n        .catch(response => {\n          return response;\n        });\n    },\n    getPageAndCase() {\n      let url = String.format('{0}/case/getPageAndCase', this.GLOBAL.WEBUI_URL);\n      this.axios\n        .get(url)\n        .then(response => {\n          this.pageAndCaseOptions = response.data.data;\n          return response;\n        })\n        .catch(response => {\n          return response;\n        });\n    },\n    // 任务详情\n    detail() {\n      this.getPageAndCase();\n      this.getConditions();\n      let url = String.format(\n        '{0}/cron/getCronById?id={1}',\n        this.GLOBAL.WEBUI_URL,\n        this.cronId\n      );\n      this.axios\n        .get(url)\n        .then(response => {\n          let dataStrArr = response.data.data.args.split(',');\n          // 保存转换后的整型字符串\n          let dataIntArr = [];\n          dataStrArr.forEach(item => {\n            dataIntArr.push(+item);\n          });\n          response.data.data.args = dataIntArr;\n          this.cronDetail = response.data.data;\n          return response;\n        })\n        .catch(response => {\n          return response;\n        });\n    }\n  },\n  computed: {\n    dialogTitle() {\n      if (this.type === 2) {\n        return '编辑' + '（任务ID：' + this.cronId + '）';\n      } else if (this.type === 3) {\n        return '复制';\n      }\n      return '新增';\n    },\n    btnText() {\n      if (this.type === 3) {\n        return '复 制';\n      }\n      return '保 存';\n    },\n    typeText() {\n      if (this.type === 2) {\n        return '编辑';\n      } else if (this.type === 3) {\n        return '复制';\n      }\n      return '新增';\n    }\n  },\n  created() {\n    this.dialogVisible = this.visible;\n    if (this.type === 1) {\n      this.getConditions();\n      this.getPageAndCase();\n    } else if (this.type === 2 || this.type === 3) {\n      this.detail();\n    }\n    // if (this.type === 1) {\n    //   this.getConditions();\n    // } else if (this.type === 2 || this.type === 3) {\n    //   this.init();\n    // }\n  }\n};\n</script>\n\n<style scoped></style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/WebUiTestTemplate/CronDialog.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-dialog',{staticClass:\"element-dialog\",attrs:{\"title\":_vm.dialogTitle,\"visible\":_vm.dialogVisible,\"width\":\"80%\",\"id\":\"elementDialog\"},on:{\"update:visible\":function($event){_vm.dialogVisible=$event},\"close\":_vm.close}},[_c('div',[_c('el-card',{staticClass:\"box-card\"},[_c('el-form',{attrs:{\"inline\":true,\"model\":_vm.cronDetail,\"size\":\"mini\"}},[_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":12}},[_c('el-form-item',{attrs:{\"label\":\"任务名称:\"}},[_c('el-input',{staticStyle:{\"width\":\"300px\"},attrs:{\"placeholder\":\"必填项:请输入任务名称\",\"clearable\":\"\"},model:{value:(_vm.cronDetail.cronName),callback:function ($$v) {_vm.$set(_vm.cronDetail, \"cronName\", $$v)},expression:\"cronDetail.cronName\"}})],1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":12}},[_c('el-form-item',{attrs:{\"label\":\"用例集合:\"}},[_c('el-select',{staticStyle:{\"width\":\"400px\"},attrs:{\"size\":\"mini\",\"placeholder\":\"请选择用例\",\"multiple\":\"\",\"filterable\":\"\"},model:{value:(_vm.cronDetail.args),callback:function ($$v) {_vm.$set(_vm.cronDetail, \"args\", $$v)},expression:\"cronDetail.args\"}},_vm._l((_vm.pageAndCaseOptions),function(group){return _c('el-option-group',{key:group.label,attrs:{\"label\":group.label}},_vm._l((group.options),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":'「' + item.value + '」' + item.label,\"value\":item.value}})}),1)}),1)],1)],1)],1),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":12}},[_c('el-form-item',{attrs:{\"label\":\"调度时间:\"}},[_c('el-input',{staticStyle:{\"width\":\"300px\"},attrs:{\"placeholder\":\"必填项:请输入内容\",\"clearable\":\"\"},model:{value:(_vm.cronDetail.execTime),callback:function ($$v) {_vm.$set(_vm.cronDetail, \"execTime\", $$v)},expression:\"cronDetail.execTime\"}})],1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":12}},[_c('el-form-item',{attrs:{\"label\":\"运行状态:\"}},[_c('el-select',{attrs:{\"filterable\":\"\",\"placeholder\":\"选择运行状态\",\"clearable\":\"\"},model:{value:(_vm.cronDetail.status),callback:function ($$v) {_vm.$set(_vm.cronDetail, \"status\", $$v)},expression:\"cronDetail.status\"}},_vm._l((_vm.statusList),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1)],1)],1)],1)],1)],1),_vm._v(\" \"),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"info\"},on:{\"click\":_vm.close}},[_vm._v(\"取 消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\"},on:{\"click\":_vm.saveCron}},[_vm._v(\"\\n        \"+_vm._s(_vm.btnText)+\"\\n      \")])],1)])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1dd55664\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/WebUiTestTemplate/CronDialog.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1dd55664\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./CronDialog.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./CronDialog.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1dd55664\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./CronDialog.vue\"\n/* template functional */\n  var __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-1dd55664\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/WebUiTestTemplate/CronDialog.vue\n// module id = null\n// module chunks = ","<template>\n  <div>\n    <el-form :inline=\"true\" :model=\"searchForm\" size=\"mini\">\n      <el-form-item label=\"id\">\n        <el-input\n          v-model=\"searchForm.id\"\n          placeholder=\"输入id\"\n          clearable\n          style=\"width: 100px\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item label=\"任务名称\">\n        <el-input\n          v-model=\"searchForm.cronName\"\n          placeholder=\"输入任务名称\"\n          clearable\n        ></el-input>\n      </el-form-item>\n      <el-form-item label=\"运行状态\">\n        <el-select\n          v-model=\"searchForm.status\"\n          filterable\n          placeholder=\"选择运行状态\"\n          clearable\n        >\n          <el-option\n            v-for=\"item in statusList\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\"\n          >\n          </el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"创建时间\">\n        <el-date-picker\n          v-model=\"searchForm.startTime\"\n          type=\"datetimerange\"\n          align=\"right\"\n          start-placeholder=\"起始时间\"\n          end-placeholder=\"截止时间\"\n          :default-time=\"['00:00:00', '23:59:59']\"\n          style=\"width: 360px;\"\n          value-format=\"yyyy-MM-dd HH:mm:ss\"\n        >\n        </el-date-picker>\n      </el-form-item>\n      <el-form-item label=\"更新时间\">\n        <el-date-picker\n          v-model=\"searchForm.updateTime\"\n          type=\"datetimerange\"\n          align=\"right\"\n          start-placeholder=\"起始时间\"\n          end-placeholder=\"截止时间\"\n          :default-time=\"['00:00:00', '23:59:59']\"\n          style=\"width: 360px;\"\n          value-format=\"yyyy-MM-dd HH:mm:ss\"\n        >\n        </el-date-picker>\n      </el-form-item>\n      <el-form-item style=\"float: right;margin-right: 60px\">\n        <el-button type=\"primary\" @click=\"getCronList\">查 询 </el-button>\n        <el-button type=\"success\" @click=\"clickAddBtn\">新 增</el-button>\n        <el-button type=\"info\" @click=\"getCronList('reset')\">重 置</el-button>\n      </el-form-item>\n    </el-form>\n\n    <el-table\n      :data=\"tableData\"\n      style=\"width: 100%\"\n      size=\"mini\"\n      border\n      :cell-style=\"{ 'text-align': 'center' }\"\n      :header-cell-style=\"{ 'text-align': 'center' }\"\n      :row-class-name=\"tableRowClassName\"\n    >\n      <el-table-column\n        fixed=\"left\"\n        prop=\"id\"\n        label=\"id\"\n        width=\"100\"\n        show-overflow-tooltip\n      >\n      </el-table-column>\n      <el-table-column\n        prop=\"cronName\"\n        label=\"任务名称\"\n        width=\"250\"\n        show-overflow-tooltip\n      >\n      </el-table-column>\n      <el-table-column\n        prop=\"execTime\"\n        label=\"调度时间\"\n        width=\"280\"\n        show-overflow-tooltip\n      >\n      </el-table-column>\n      <el-table-column\n        prop=\"args\"\n        label=\"调度参数\"\n        width=\"180\"\n        show-overflow-tooltip\n      >\n      </el-table-column>\n      <el-table-column label=\"运行状态\" width=\"120\" show-overflow-tooltip>\n        <template slot-scope=\"scope\">\n          <span>{{ statusMap[tableData[scope.$index].status] }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        prop=\"addTime\"\n        label=\"创建时间\"\n        width=\"250\"\n        show-overflow-tooltip\n      >\n      </el-table-column>\n      <el-table-column\n        prop=\"updateTime\"\n        label=\"更新时间\"\n        width=\"250\"\n        show-overflow-tooltip\n      >\n      </el-table-column>\n      <el-table-column label=\"操作\" width=\"250\" fixed=\"right\">\n        <template slot-scope=\"scope\">\n          <el-button\n            type=\"text\"\n            size=\"mini\"\n            @click=\"execCases(tableData[scope.$index].args)\"\n            >执行\n          </el-button>\n          <el-button\n            type=\"text\"\n            size=\"mini\"\n            @click=\"cronDetail(tableData[scope.$index].id, 'edit')\"\n            >编辑\n          </el-button>\n          <el-button\n            type=\"text\"\n            size=\"mini\"\n            @click=\"deleteCron(tableData[scope.$index].id)\"\n            >删除\n          </el-button>\n          <el-button\n            type=\"text\"\n            size=\"mini\"\n            @click=\"cronDetail(tableData[scope.$index].id, 'copy')\"\n            >复制\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-pagination\n      @current-change=\"getCronList('search')\"\n      :current-page.sync=\"currentPage\"\n      :page-size=\"pageSize\"\n      layout=\"total,slot, prev, pager, next, jumper\"\n      :total=\"total\"\n      style=\"margin-top: 10px\"\n      size=\"mini\"\n    >\n      <span>{{ pageSize }}条/页</span>\n    </el-pagination>\n    <cron-dialog\n      v-if=\"dialogVisible\"\n      :visible=\"dialogVisible\"\n      :cron-id=\"cronId\"\n      :type=\"dialogVisibleType\"\n      @listenToChildEvent=\"callbackFunc\"\n    ></cron-dialog>\n  </div>\n</template>\n\n<script>\nimport CronDialog from '../WebUiTestTemplate/CronDialog';\n\nexport default {\n  name: 'WebUiTask',\n  components: {\n    cronDialog: CronDialog\n  },\n  data() {\n    return {\n      dialogVisible: false,\n      dialogVisibleType: 1,\n      cronId: null,\n      tableData: [],\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      statusList: [],\n      statusMap: {},\n      searchForm: {\n        id: '',\n        cronName: '',\n        status: '',\n        startTime: [],\n        updateTime: []\n      }\n    };\n  },\n  methods: {\n    execCases(caseIds) {\n      // 指定参数格式\n      let config = {\n        headers: {\n          'Content-Type': 'application/json;charset=UTF-8'\n        }\n      };\n      let url = String.format('{0}/case/execCaseList', this.GLOBAL.WEBUI_URL);\n      let param = { caseIds: caseIds };\n      this.axios\n        .post(url, JSON.stringify(param), config)\n        .then(response => {\n          this.Message.success(response.data.msg);\n\n          return response;\n        })\n        .catch(response => {\n          return response;\n        });\n    },\n    // 获取查询条件\n    getCondition() {\n      let url = String.format('{0}/cron/getCondition', this.GLOBAL.WEBUI_URL);\n      this.axios\n        .get(url)\n        .then(response => {\n          this.statusList = response.data.data.statusList;\n          this.statusMap = response.data.data.statusMap;\n          return response;\n        })\n        .catch(response => {\n          return response;\n        });\n    },\n    // 重置查询条件表单\n    resetSearchForm() {\n      this.searchForm = {\n        id: '',\n        cronName: '',\n        status: '',\n        startTime: [],\n        updateTime: []\n      };\n    },\n    // 获取元素列表\n    getCronList(model) {\n      // 重置\n      if (model === 'reset') {\n        this.currentPage = 1;\n        this.resetSearchForm();\n        // 新增、编辑、删除\n      } else if (model === 'normal') {\n        this.currentPage = 1;\n      }\n      // 指定参数格式\n      let config = {\n        headers: {\n          'Content-Type': 'application/json;charset=UTF-8'\n        }\n      };\n      let url = String.format('{0}/cron/cronList', this.GLOBAL.WEBUI_URL);\n      this.searchForm['pageNum'] = this.currentPage;\n      this.axios\n        .post(url, JSON.stringify(this.searchForm), config)\n        .then(response => {\n          this.tableData = response.data.data.cronList;\n          this.total = response.data.data.total;\n          return response;\n        })\n        .catch(response => {\n          return response;\n        });\n    },\n    // 设置行的颜色\n    tableRowClassName({ row, rowIndex }) {\n      if (rowIndex % 2 === 0) {\n        return 'warning-row';\n      } else {\n        return 'success-row';\n      }\n    },\n    // 用于子组件的回调函数\n    callbackFunc(fresh) {\n      this.dialogVisible = false;\n      if (fresh) {\n        this.getCronList('normal');\n      }\n    },\n    // 点击新增按钮\n    clickAddBtn() {\n      this.dialogVisibleType = 1;\n      this.dialogVisible = true;\n    },\n    // 任务详情\n    cronDetail(id, model) {\n      if (model === 'edit') {\n        this.dialogVisibleType = 2;\n      } else if (model === 'copy') {\n        this.dialogVisibleType = 3;\n      }\n      this.cronId = id;\n      this.dialogVisible = true;\n    },\n    // 删除任务\n    deleteCron(id) {\n      this.$confirm(\n        String.format('此操作将永久删除该任务(id:{0}), 是否继续?', id),\n        '提示',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }\n      ).then(() => {\n        // 指定参数格式\n        let config = {\n          headers: {\n            'Content-Type': 'application/json;charset=UTF-8'\n          }\n        };\n        let url = String.format('{0}/cron/deleteCron', this.GLOBAL.WEBUI_URL);\n        const param = { id: id };\n        this.axios\n          .post(url, JSON.stringify(param), config)\n          .then(response => {\n            if (response.data.code === '1000') {\n              this.Message.success(response.data.msg);\n              this.getCronList('normal');\n            } else {\n              this.Message.error(response.data.msg);\n              this.getCronList('normal');\n            }\n            return response;\n          })\n          .catch(response => {\n            return response;\n          });\n      });\n    }\n  },\n  beforeMount() {\n    this.getCondition();\n    this.getCronList();\n  }\n};\n</script>\n\n<style scoped>\n.el-table >>> .warning-row {\n  background: oldlace;\n}\n\n.el-table >>> .success-row {\n  background: #f0f9eb;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/rootPageTemplate/WebUiTask.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-form',{attrs:{\"inline\":true,\"model\":_vm.searchForm,\"size\":\"mini\"}},[_c('el-form-item',{attrs:{\"label\":\"id\"}},[_c('el-input',{staticStyle:{\"width\":\"100px\"},attrs:{\"placeholder\":\"输入id\",\"clearable\":\"\"},model:{value:(_vm.searchForm.id),callback:function ($$v) {_vm.$set(_vm.searchForm, \"id\", $$v)},expression:\"searchForm.id\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"任务名称\"}},[_c('el-input',{attrs:{\"placeholder\":\"输入任务名称\",\"clearable\":\"\"},model:{value:(_vm.searchForm.cronName),callback:function ($$v) {_vm.$set(_vm.searchForm, \"cronName\", $$v)},expression:\"searchForm.cronName\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"运行状态\"}},[_c('el-select',{attrs:{\"filterable\":\"\",\"placeholder\":\"选择运行状态\",\"clearable\":\"\"},model:{value:(_vm.searchForm.status),callback:function ($$v) {_vm.$set(_vm.searchForm, \"status\", $$v)},expression:\"searchForm.status\"}},_vm._l((_vm.statusList),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"创建时间\"}},[_c('el-date-picker',{staticStyle:{\"width\":\"360px\"},attrs:{\"type\":\"datetimerange\",\"align\":\"right\",\"start-placeholder\":\"起始时间\",\"end-placeholder\":\"截止时间\",\"default-time\":['00:00:00', '23:59:59'],\"value-format\":\"yyyy-MM-dd HH:mm:ss\"},model:{value:(_vm.searchForm.startTime),callback:function ($$v) {_vm.$set(_vm.searchForm, \"startTime\", $$v)},expression:\"searchForm.startTime\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"更新时间\"}},[_c('el-date-picker',{staticStyle:{\"width\":\"360px\"},attrs:{\"type\":\"datetimerange\",\"align\":\"right\",\"start-placeholder\":\"起始时间\",\"end-placeholder\":\"截止时间\",\"default-time\":['00:00:00', '23:59:59'],\"value-format\":\"yyyy-MM-dd HH:mm:ss\"},model:{value:(_vm.searchForm.updateTime),callback:function ($$v) {_vm.$set(_vm.searchForm, \"updateTime\", $$v)},expression:\"searchForm.updateTime\"}})],1),_vm._v(\" \"),_c('el-form-item',{staticStyle:{\"float\":\"right\",\"margin-right\":\"60px\"}},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.getCronList}},[_vm._v(\"查 询 \")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"success\"},on:{\"click\":_vm.clickAddBtn}},[_vm._v(\"新 增\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"info\"},on:{\"click\":function($event){return _vm.getCronList('reset')}}},[_vm._v(\"重 置\")])],1)],1),_vm._v(\" \"),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData,\"size\":\"mini\",\"border\":\"\",\"cell-style\":{ 'text-align': 'center' },\"header-cell-style\":{ 'text-align': 'center' },\"row-class-name\":_vm.tableRowClassName}},[_c('el-table-column',{attrs:{\"fixed\":\"left\",\"prop\":\"id\",\"label\":\"id\",\"width\":\"100\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"cronName\",\"label\":\"任务名称\",\"width\":\"250\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"execTime\",\"label\":\"调度时间\",\"width\":\"280\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"args\",\"label\":\"调度参数\",\"width\":\"180\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"运行状态\",\"width\":\"120\",\"show-overflow-tooltip\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',[_vm._v(_vm._s(_vm.statusMap[_vm.tableData[scope.$index].status]))])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"addTime\",\"label\":\"创建时间\",\"width\":\"250\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"updateTime\",\"label\":\"更新时间\",\"width\":\"250\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\",\"width\":\"250\",\"fixed\":\"right\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.execCases(_vm.tableData[scope.$index].args)}}},[_vm._v(\"执行\\n        \")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.cronDetail(_vm.tableData[scope.$index].id, 'edit')}}},[_vm._v(\"编辑\\n        \")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.deleteCron(_vm.tableData[scope.$index].id)}}},[_vm._v(\"删除\\n        \")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.cronDetail(_vm.tableData[scope.$index].id, 'copy')}}},[_vm._v(\"复制\\n        \")])]}}])})],1),_vm._v(\" \"),_c('el-pagination',{staticStyle:{\"margin-top\":\"10px\"},attrs:{\"current-page\":_vm.currentPage,\"page-size\":_vm.pageSize,\"layout\":\"total,slot, prev, pager, next, jumper\",\"total\":_vm.total,\"size\":\"mini\"},on:{\"current-change\":function($event){return _vm.getCronList('search')},\"update:currentPage\":function($event){_vm.currentPage=$event},\"update:current-page\":function($event){_vm.currentPage=$event}}},[_c('span',[_vm._v(_vm._s(_vm.pageSize)+\"条/页\")])]),_vm._v(\" \"),(_vm.dialogVisible)?_c('cron-dialog',{attrs:{\"visible\":_vm.dialogVisible,\"cron-id\":_vm.cronId,\"type\":_vm.dialogVisibleType},on:{\"listenToChildEvent\":_vm.callbackFunc}}):_vm._e()],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-04398a7c\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/rootPageTemplate/WebUiTask.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-04398a7c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./WebUiTask.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./WebUiTask.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-04398a7c\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./WebUiTask.vue\"\n/* template functional */\n  var __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-04398a7c\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/rootPageTemplate/WebUiTask.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}